.BMK_ECS_UPDATE_SCRIPT: &BMK_ECS_UPDATE_SCRIPT
  - echo $TD_NAME "|" $SERVICE_NAME "|" $CLUSTER_NAME
  - echo "Registering new container definition..."
  - echo `aws ecs describe-task-definition --task-definition  $TD_NAME --region $AWS_DEFAULT_REGION` > dev_input.json
  - echo $(cat dev_input.json | jq '.taskDefinition.containerDefinitions[0].image="'$REPOSITORY_URL':'$IMAGE_TAG'"') > dev_input.json
  - echo $(cat dev_input.json | jq '.taskDefinition') > dev_input.json
  - echo $(cat dev_input.json | jq  'del(.taskDefinitionArn)' | jq 'del(.revision)' | jq 'del(.status)' | jq 'del(.requiresAttributes)' | jq 'del(.compatibilities)'| jq 'del(.registeredBy)'| jq 'del(.registeredAt)') > dev_input.json
  - aws ecs register-task-definition --cli-input-json file://dev_input.json --region $AWS_DEFAULT_REGION >> /dev/null
  - revision=$(aws ecs describe-task-definition --task-definition $TD_NAME --region $AWS_DEFAULT_REGION | egrep "revision" | tr "/" " " | awk '{print $2}' | sed 's/"$//' | cut -d "," -f 1)
  - echo "Updating the service..."
  - aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment  --task-definition $TD_NAME:$revision --region $AWS_DEFAULT_REGION --desired-count 1 >> /dev/null

.ECS_UPDATE_SCRIPT: &ECS_UPDATE_SCRIPT
  - echo $TD_NAME "|" $SERVICE_NAME "|" $CLUSTER_NAME
  - echo "Registering new container definition..."
  - echo `aws ecs describe-task-definition --task-definition  $TD_NAME --region $AWS_DEFAULT_REGION` > dev_input.json
  - echo $(cat dev_input.json | jq '.taskDefinition.containerDefinitions[0].image="'$REPOSITORY_URL':'$IMAGE_TAG'"') > dev_input.json
  - echo $(cat dev_input.json | jq '.taskDefinition') > dev_input.json
  - echo $(cat dev_input.json | jq  'del(.taskDefinitionArn)' | jq 'del(.revision)' | jq 'del(.status)' | jq 'del(.requiresAttributes)' | jq 'del(.compatibilities)'| jq 'del(.registeredBy)'| jq 'del(.registeredAt)') > dev_input.json
  - aws ecs register-task-definition --cli-input-json file://dev_input.json --region $AWS_DEFAULT_REGION >> /dev/null
  - revision=$(aws ecs describe-task-definition --task-definition $TD_NAME --region $AWS_DEFAULT_REGION | egrep "revision" | tr "/" " " | awk '{print $2}' | sed 's/"$//' | cut -d "," -f 1)
  - echo "Updating the service..."
  - if [ "$CI_COMMIT_BRANCH" == "master" ]; then aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME  --task-definition $TD_NAME:$revision --region $AWS_DEFAULT_REGION >> /dev/null; else aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment  --task-definition $TD_NAME:$revision --region $AWS_DEFAULT_REGION >> /dev/null; fi

.ECS_VALIDATE_SCRIPT: &ECS_VALIDATE_SCRIPT
  - start=$(date +%s)
  - end=$((start + 600))
  - sleep 15
  - while [ $(date +%s) -lt $end ];
    do
      deployment_status=$(aws ecs describe-services --cluster $CLUSTER_NAME --services $SERVICE_NAME --query "services[0].deployments[0].rolloutState" --output text);
      COMPLETE=IN_PROGRESS;
      if [ "$deployment_status" != *"$COMPLETE"* ]; then
        echo "deployment success";
        exit 0;
      fi
    done
  - echo "deployment failed"
  - exit 1

stages:
  - ecs_build
  - ecs_deploy
  - ecs_validate

include:
  - project: 'ecs-system/deploy-cicd'
    file:
      - '/ECS-CICD-v4/.before_script.yml'
      - '/ECS-CICD-v4/.validate_ecs_deployment.yml'

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      variables:
        REPOSITORY_URL: 172492757904.dkr.ecr.ap-southeast-1.amazonaws.com/prd-scanit-grpc-ai-service
        CLUSTER_NAME: PRD-API-CLUSTER
        ECR_REPOSITORY: 172492757904.dkr.ecr.ap-southeast-1.amazonaws.com
        builder_tag: prd_ecs-ai
        tag: prd_ecs
    - if: $CI_COMMIT_BRANCH == "bmk"
      variables:
        REPOSITORY_URL: 890970452363.dkr.ecr.ap-southeast-1.amazonaws.com/bmk-scanit-grpc-ai-service
        CLUSTER_NAME: BMK-FARGATE-CLUSTER
        ECR_REPOSITORY: 890970452363.dkr.ecr.ap-southeast-1.amazonaws.com
        builder_tag: ecs-ai
        tag: ecs
    - if: $CI_COMMIT_BRANCH == "staging"
      variables:
        REPOSITORY_URL: 890970452363.dkr.ecr.ap-southeast-1.amazonaws.com/stg-scanit-grpc-ai-service
        CLUSTER_NAME: STG-API-CLUSTER
        ECR_REPOSITORY: 890970452363.dkr.ecr.ap-southeast-1.amazonaws.com
        builder_tag: ecs-ai
        tag: ecs
    - if: $CI_COMMIT_BRANCH == "development"
      variables:
        REPOSITORY_URL: 890970452363.dkr.ecr.ap-southeast-1.amazonaws.com/dev-scanit-grpc-ai-service
        CLUSTER_NAME: DEV-EC2-CLUSTER
        ECR_REPOSITORY: 890970452363.dkr.ecr.ap-southeast-1.amazonaws.com
        builder_tag: ecs-ai
        tag: ecs

image_build:
  stage: ecs_build
  cache:
    key: $CI_COMMIT_REF_SLUG
  only:
    - development
    - staging
    - bmk
    - master
  script:
    - git lfs pull
    - echo "Building Image..."
    - docker buildx create --use
    - docker buildx build --push -t $REPOSITORY_URL:latest -t $REPOSITORY_URL:$IMAGE_TAG --file Dockerfile .
    - docker buildx rm
  tags:
    - $builder_tag

test_service_update:
  stage: ecs_deploy
  variables:
    SERVICE_NAME: test_scanit-grpc-ai-service_api
    TD_NAME: test_scanit-grpc-ai-service_api
  only:
    - development
  script:
    - *ECS_UPDATE_SCRIPT
  tags:
    - $tag

test_service_validate:
  variables:
    SERVICE_NAME: test_scanit-grpc-ai-service_api
  extends: [.validate_ecs_deployment]
  stage: ecs_validate
  script:
    - *ECS_VALIDATE_SCRIPT
  only:
    - development
  tags:
    - $tag

stg_service_update:
  stage: ecs_deploy
  variables:
    SERVICE_NAME: stg_scanit-grpc-ai-service_api
    TD_NAME: stg_scanit-grpc-ai-service_api
  only:
    - staging
  script:
    - *ECS_UPDATE_SCRIPT
  tags:
    - $tag

stg_service_validate:
  variables:
    SERVICE_NAME: stg_scanit-grpc-ai-service_api
  extends: [.validate_ecs_deployment]
  stage: ecs_validate
  script:
    - *ECS_VALIDATE_SCRIPT
  only:
    - staging
  tags:
    - $tag

bmk_service_update:
  stage: ecs_deploy
  variables:
    SERVICE_NAME: bmk_scanit-grpc-ai-service_api
    TD_NAME: bmk_scanit-grpc-ai-service_api
  only:
    - bmk
  script:
    - *BMK_ECS_UPDATE_SCRIPT
  tags:
    - $tag

bmk_service_validate:
  variables:
    SERVICE_NAME: bmk_scanit-grpc-ai-service_api
  extends: [.validate_ecs_deployment]
  stage: ecs_validate
  script:
    - *ECS_VALIDATE_SCRIPT
  only:
    - bmk
  tags:
    - $tag

prd_service_update:
  stage: ecs_deploy
  variables:
    SERVICE_NAME: prd_scanit-grpc-ai-service_api
    TD_NAME: prd_scanit-grpc-ai-service_api
  only:
    - master
  script:
    - *ECS_UPDATE_SCRIPT
  tags:
    - $tag
  when: manual

prd_service_validate:
  variables:
    SERVICE_NAME: prd_scanit-grpc-ai-service_api
  extends: [.validate_ecs_deployment]
  stage: ecs_validate
  needs: ["prd_service_update"]
  script:
    - *ECS_VALIDATE_SCRIPT
  only:
    - master
  tags:
    - $tag
